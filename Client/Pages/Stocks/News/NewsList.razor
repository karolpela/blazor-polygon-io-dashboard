@using FinanceApp.Shared.Models.News
@inject HttpClient Http
@inject ISnackbar Snackbar

@if (NewsResultImageDtos != null)
{
    <MudStack>
        @foreach (var itemDto in NewsResultImageDtos)
        {
            <NewsItem ItemDto="itemDto"></NewsItem>
        }
    </MudStack>
}
else
{
    {
        <MudText Class="pa-4" Typo="Typo.body1">Loading news...</MudText>
    }
}

@code {

    [Parameter]
    public string? SelectedTicker { get; set; }

    private int newsCount = 5;

    private IEnumerable<NewsResultImageDto>? NewsResultImageDtos { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (SelectedTicker == null) return;
        try
        {
            NewsResultImageDtos = await Http.GetFromJsonAsync<IEnumerable<NewsResultImageDto>>(
                $"api/Tickers/{SelectedTicker}/news?count={newsCount}");
        }
        catch (HttpRequestException)
        {
            NewsResultImageDtos = null;
            Snackbar.Add("Unable to get news. Try again later if requests exceeded.");
        }
    }

}